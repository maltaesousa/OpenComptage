* Engineering
** Purpose 
   The purposes of the QGIS plugin are:
   - plan the future measure campaigns
   - prepare the current measure campaign
   - import and management of the measure data
   - centralized management of the measure data
** Glossary
   | English           | French                 |
   |-------------------+------------------------|
   | measure           | comptage               |
   | measure campaign  | campagne de comptage   |
   | measure place     | poste de comptage      |
   | device            | machine                |
   |                   | capteurs               |
   |                   | compteur MD            |
   |                   | cas spécial            |
   |                   | canal                  |
   |                   | période de pose        |
   |                   | période de comptage    |
   |                   | fiche de pose          |
   | sections          | tronçon                |
   |                   | voie de circulation    |
   |                   | direction              |
   |                   | fichier de config      |
   |                   | fichier binaire        |
   |                   | ficher ASCII           |
   |                   | ficher rapport (Excel) |
   |                   | fichier rapport (PDF)  |
   |                   | étape de contrôle      |
   |                   | étape de validation    |
   | temporary measure | comptages temporaires  |
   | permanent measure | comptages permanents   |
   |                   | classe de véhicules    |
** Use cases
*** UC1 Visualisation of existing measure campaigns
    The user requests to see the past measure campaigns. He can filter the
    results by date, type of measure and type of device. The campaigns are
    showed as colored road segments. If the measure campaign was during a special event
    or a holidays, an information is showed.
    * Input:
      * date from
      * date to
      * type of measure
      * type of device
    * Output: 
      - map
*** UC2 Create device configuration
    The user selects the tool to create a new device configuration. He clicks on
    the map to define the location and he sets all the details of the measure campaign
    and the used device in the showed form. Once the details are inserted, he
    is informed if there are some issues (e.g. non-working days) and he can
    download the configuration file to be used into the measure machine.
    - Input:
      - measure details
      - device details
    - Output:
      - configuration file
*** UC3 Create measure plan
    The user selects the tool to create a measure plan. He is asked to select
    the desired measures and then he can download the measure plan with the
    picture and the map of the location
    - Input: 
      - selection of measure points
    - Output:
      - plan file with map
*** UC4 Insert device number
    The user selects an existing measure on the map and can edit the details and
    (e.g. insert the device number).
    - Input:
      - device number
    - Output:
      - 
*** UC5 Import measure data
    The user selects the tool to import the measure data. He can select one or
    more files from the file system. Only the data of the measure days are
    imported. After the import, the user sees a chart of the imported data and
    can decide if he wants to finalize the import or abort it.
    - Input:
      - data files
    - Output:
      - chart of measures
*** UC6 Create report
    The user selects the tool to create a report. He define the details of the
    report he wants to export and he can download the report. 
    - Input:
      - measure id
    - Output:
      - report PDF
*** UC7 Validate measure
    The user (trafic engineer) opens the attribute table of the measures and sets
    the validity flag of the data he wants to validate.
    - Input:
      - Validity state
    - Output:
      - 
*** UC8 Import non-working days
    The user selects the tool to insert the non-working days. He can select a
    ics file from the file system.  
    - Input:
      - ics file
    - Output:
      - 
*** UC9 Set road segment details
    The user select a road segment and set the details (picture, common name).
    - Input:
      - picture, common name of the segment
    - Output:
    - 
** Functional requirements
*** FR1
    The product shall show the recorded measure campaigns on a map.
    - Rationale
      Users want to consult past data to plan futures measure campagins.
    - Fit criteria
      All permanent measures are showed as a point on the map and all temporary
      measures area showed as a colored road segment on the map.
    - Use cases
      - UC1
*** FR2
    The product shall allow to filter the displayed measure campaigns by date,
    type of measure and type of device.
    - Rationale
      To simplify the analysis of existing measure campaigns.
    - Fit criteria
      All and only the measure campaigns that match the filters are showed on
      the map.
    - Use cases
      - UC1
*** FR3
    The product shall show the data of a measure campaign when clicked.
    - Rationale
      To allow the user to analyse data.
    - Fit criteria
      When a measure campaign showed on the map is clicked a table with the data
      of the measure campaign appear.
    - Use cases
      - UC1
*** FR4
    The product shall alert the user if the measure campaign was during a
    special event or a holiday. 
    - Rationale
      Measures during special days can distort data.
    - Fit criteria
      When the measure campaign details are showed, if a day of the campaign was
      holiday or a special event day, an alert message is showed.
    - Use cases
      - UC1
*** FR5
    The product shall allow to click on a road segment or a permanent measure
    place, when the specific tool is selected, to add a new measure campaign and
    insert the campaign details or modify the existing details.
    - Rationale
      To create a new measure campaign and create the config file for the
      measure machine.
    - Fit criteria 
      Clicking on a road segment or a measure location, the form to
      insert the details is showed and the measure campaign is created.
    - Use cases
      - UC2
      - UC4
*** FR6
    The product shall alert the user if a new campaign is defined during a
    special event or a holiday.
    - Rationale
      So the user can modify immediately the period of the measure.
    - Fit Criteria
      If a special event or a holiday occur during the measure period, an alert
      is showed.
    - Use cases
      - UC2
*** FR7
    The product shall generate a configuration file for the measure machine from
    a measure campaign.
    - Rationale
      To make the real measure campaign
    - Fit Criteria
      A configuration file in the machine format is created and stored on the
      file system.
    - Use cases
      - UC2
*** FR8
    The product shall create a measure plan from the selected measure campaigns.
    - Rationale
      To have a document to give to the workers with the measure campaign
      information.
    - Fit Criteria
      A document with the information of the selected measure campagins is
      created and stored on the file system.
    - Use cases
      - UC3
*** FR9
    The product shall import the measure data files.
    - Rationale
      To import the data collected from the measure campaign into the system.
    - Fit Criteria
      The data contained in the measure data files are imported into the system.
    - Use cases
      - UC5
*** FR10
    The product shall import only the data of the days that are defined as
    measure days in the campaign details.
    - Rationale
      To avoid junk data into the system
    - Fit Criteria
      All the data imported into the system are from measure days.
    - Use cases
      - UC5
*** FR11
    The product shall display a chart of the imported data and ask to confirm or
    abort the import.
    - Rationale
      To notice before the import if some data are missing or strange.
    - Fit Criteria
      A chart with the imported data, divided by hour is displayed.
    - Use cases
      - UC5
*** FR12
    The product shall create a report of a measure campaign.
    - Rationale 
      To have a document to send to the traffic engineer or to share with
      someone else.
    - Fir Criteria
      A PDF with the content of the current report is created.
    - Use cases
      - UC6
*** FR13
    The product shall allow to validate a measure campaign data.
    - Rationale
      To identify which data are been verified and certified by the traffic
      engineer.
    - Fit Criteria
      A measure campaign data contains a flag that indicate if the data are
      validated.
    - Use cases
      - UC7
*** FR14
    The product shall import ics files with holidays and special event
    days. 
    - Rationale
      To alert if a measure campaign is during a special day.
    - Fit Criteria
      All the dates contained into the ics file are stored into the system.
    - Use cases
      - UC8
*** FR15
    The product shall allow to set the road segment details for the temporary
    measure locations: picture and common
    name. 
    - Rationale
      To have the information for the measure plan.
    - Fit Criteria
      Each temporary measure location can have a picture and a common name.
    - Use cases
      - UC9
** Non-functional requirements
*** NFR1
    The product shall record a log for all the modification to the database,
    with datestamp and user.
    - Rationale
      To be able to identify who changed the data if something is wrong
    - Fit Criteria
      All modification to the database are stored in a log table.
*** NFR2
    The product shall use the correct terminology in all user interfaces.
    - Rationale
      To avoid confusion and misunderstanding
    - Fit Criteria
      The terms used in all user interfaces match with the glossary of the
      /Cahier des charges/.
*** NFR3
    The product shall allow to add the support to a new measure device easily.
    - Rationale
      The customer wants to be able to write himself the modification to the
      product to support another measure device type.
    - Fit Criteria
      To support a new measure device, it's enough to create a new class, well
      documented.
** Data model
   The data model has been created to easily allow to add functionality to the product
   e.g. adding new vehicle classes and to be as simple as possible and easily
   usable into QGIS. It is flexible enough to support natively all the current
   special cases without write special management code.
*** Tables
    | English name   | French name      |
    |----------------+------------------|
    | damage_log     | journal_panne    |
    | device         | automate         |
    | model          | model            |
    | brand          | marque           |
    | sensor_type    | type_capteur     |
    | classe         | classification   |
    | category       | categorie        |
    | count          | comptage         |
    | installation   | installation     |
    | lane           | voie             |
    | section        | troncon          |
    | count_detail   | comptage_detail  |
    | special_period | periode_speciale |
**** Translation issues
     - nom_formatter in model?
     - pr_debut et fin in troncon
     - dist_debut et fin in troncon
**** section
     This table contains the street sections (/tronçons/). The data are imported
     from the existing BASE_TJM_OK MapInfo table. 
     | Field      | Type                       | Origin                  | Remarks                               |
     |------------+----------------------------+-------------------------+---------------------------------------|
     | id         | char(20)                   | BASE_TJM_OK.fsection    | id of the section (normally 8 digits) |
     | name       | text                       | BASE_TJM_OK.nom_rue     | street name                           |
     | owner      | text                       | BASE_TJM_OK.f_prop      | owner of the road                     |
     | road       | text                       | BASE_TJM_OK.f_axe       |                                       |
     | way        | char(1)                    | BASE_TJM_OK.f_sens      | Can be ['+', '-', '=']                |
     | start_pr   | text                       | BASE_TJM_OK.f_pr_d      |                                       |
     | end_pr     | text                       | BASE_TJM_OK.f_pr_f      |                                       |
     | start_dist | numeric(18,3)              | BASE_TJM_OK.f_dist_d    |                                       |
     | end_dist   | numeric(18,3)              | BASE_TJM_OK.f_dist_f    |                                       |
     | place_name | text                       | BASE_TJM_OK.lieu_rue    |                                       |
     | geometry   | geometry(LineString, 2056) | geometry of BASE_TJM_OK | geometry                              |
**** lane
     This table contains the lanes of a street section. The data are imported
     from the existing BASE_TJM_OK MapInfo table.
*** Import of existing data
**** BASE_TJM_OK
     Procedure to import the data from the MapInfo dump of BASE_TJM_OK:
     (Step from 1 to 6 are needed only if the MapInfo base has changed)
     1. open the file BASE_TJM_OK.TAB in QGIS
     2. set the CRS of the layer to 2056
     3. create a temporary transfer table (~base_tjm_ok.base_tjm_ok~) into the
        postgres db with the script ~../db/base_tjm_ok.sql~ 
     4. load the created table as layer into QGIS
     5. manually copy-paste all the features to the new table
     6. create a sql dump of the new table into ~../db/base_tjm_ok_data.sql~
     7. run the script ~../db/base_tjm_ok_data_transfer.sql~ to convert and
        transfer the data to the correct tables
** Design
*** Practices
**** TDD
***** Functional tests
      Funtional tests that cover all functionalities. Are run by the CI tool on
      each push.
      Test workflow
      - run a docker with qgis
        - install the plugin into qgis
      - run a docker with pg
        - create the database
        - import the test data
      - run the functional tests into qgis
***** Unit test
      That cover all code functions.
***** CI
      Tests on each push, release on each tag
*** Libraries
**** db
     - SQLAlchemy?
**** charts
     - Plotly
**** pdf
     - ReportLab?
